var documenterSearchIndex = {"docs":
[{"location":"methods/#Methods-list","page":"Methods","title":"Methods list","text":"","category":"section"},{"location":"methods/","page":"Methods","title":"Methods","text":"","category":"page"},{"location":"methods/#Methods-usage","page":"Methods","title":"Methods usage","text":"","category":"section"},{"location":"methods/","page":"Methods","title":"Methods","text":"Modules = [Sound]","category":"page"},{"location":"methods/#Sound.sound-Tuple{AbstractArray}","page":"Methods","title":"Sound.sound","text":"sound(x)\n\nPlay mono or stereo audio signal x at default sampling rate 8192 samples per second through default audio output device using the PortAudio package.\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sound.sound-Tuple{AbstractMatrix{T} where T, Real}","page":"Methods","title":"Sound.sound","text":"sound(x::AbstractMatrix, S::Real)\n\nPlay stereo audiosignal x at sampling rate S samples per second through default audio output device using the PortAudio package.\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sound.sound-Tuple{AbstractVector{T} where T, Real}","page":"Methods","title":"Sound.sound","text":"sound(x::AbstractVector, S::Real)\n\nPlay monophonic audiosignal x at sampling rate S samples per second through default audio output device using the PortAudio package.\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = Sound","category":"page"},{"location":"#Sound.jl-Documentation","page":"Home","title":"Sound.jl Documentation","text":"","category":"section"},{"location":"#Contents","page":"Home","title":"Contents","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The Julia module Sound.jl exports a function sound for playing an audio signal through a computer audio output.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Its usage is designed to be similar to that of Matlab's sound command to facilitate migration.","category":"page"},{"location":"#Getting-started","page":"Home","title":"Getting started","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(\"Sound\")","category":"page"},{"location":"#Example","page":"Home","title":"Example","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Sound\nS = 8192 # sampling rate in Hz\nx = cos.(2pi*(1:S÷2)*440/S)\ny = sin.(2pi*(1:S÷2)*660/S)\nsound(x, S) # specify sampling rate\nsound(y) # use default sampling rate of 8192 Hz\nsound([x y]) # stereo","category":"page"},{"location":"","page":"Home","title":"Home","text":"Matlab also has a soundsc command that scales the audio; such scaling is already built into sound here, so soundsc is unnecessary.","category":"page"}]
}
